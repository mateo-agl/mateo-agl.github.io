{"version":3,"sources":["reducer.js","components/Break.jsx","components/Display.jsx","components/Session.jsx","interval.js","index.js"],"names":["initialState","break","session","timerLbl","timeLeft","start","reducerClock","state","action","type","time","label","connect","length","dispatch","increment","decrement","Break","id","className","onClick","timeConverter","minutes","parseInt","seconds","start_stop","Display","run","stop","reset","Session","interval","fn","baseline","Date","getTime","timeout","setTimeout","clearTimeout","Clock","this","counter","store","getState","alarm","play","stopCountdown","countdown","bind","preload","src","ref","audio","React","Component","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ae7060d.chunk.js","sourcesContent":["const initialState = {\r\n  break: 5,\r\n  session: 25,\r\n  timerLbl: \"Session\",\r\n  timeLeft: 1500,\r\n  start: false\r\n}\r\n\r\nconst reducerClock = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case \"BREAK_INCREMENT\":\r\n      return {\r\n        ...state,\r\n        break: state.break < 60 ? \r\n        state.break + 1 : state.break\r\n      }\r\n    case \"BREAK_DECREMENT\":\r\n      return {\r\n        ...state,\r\n        break: state.break > 1 ? \r\n        state.break - 1 : state.break\r\n      }\r\n    case \"SESSION_INCREMENT\":\r\n      return {\r\n        ...state,\r\n        session: state.session < 60 ? \r\n        state.session + 1 : state.session,\r\n        timeLeft: state.session < 60 ? \r\n        (state.session + 1) * 60 : state.timeLeft\r\n      }\r\n    case \"SESSION_DECREMENT\":\r\n      return {\r\n        ...state,\r\n        session: state.session > 1 ? \r\n        state.session - 1 : state.session,\r\n        timeLeft: state.session > 1 ? \r\n        (state.session - 1) * 60 : state.timeLeft\r\n      }\r\n    case \"START_STOP\":\r\n      return {\r\n        ...state,\r\n        start: !state.start\r\n      }\r\n    case \"COUNTDOWN\":\r\n      return {\r\n        ...state,\r\n        timeLeft: state.timeLeft - 1\r\n      }\r\n    case \"CHANGE_TIME\":\r\n      return {\r\n        ...state,\r\n        timeLeft: action.time,\r\n        timerLbl: action.label\r\n      }\r\n    case \"RESET\":\r\n      return initialState;\r\n    default:\r\n      return initialState;\r\n  }\r\n}\r\n\r\nexport default reducerClock;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Break = (Break) => (\r\n  <div id=\"break\">\r\n    <label id=\"break-label\">Break Length</label>\r\n    <div className=\"controls\">\r\n      <i id=\"break-decrement\" onClick={Break.decrement} className=\"bi bi-arrow-down-short\"/>\r\n      <label id=\"break-length\">{Break.length}</label>\r\n      <i id=\"break-increment\" onClick={Break.increment} className=\"bi bi-arrow-up-short\"/>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    increment: () => dispatch({ type: \"BREAK_INCREMENT\" }),\r\n    decrement: () => dispatch({ type: \"BREAK_DECREMENT\" })\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  length: state.break\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Break);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Display = (Display) => {\r\n  return (\r\n  <div \r\n  id=\"display\">\r\n    <label \r\n    id=\"timer-label\">\r\n      {Display.timerLbl}\r\n    </label>\r\n    <div \r\n    id=\"time-left\">\r\n      {Display.timeLeft}\r\n    </div>\r\n    <div \r\n    id=\"timer\" \r\n    className=\"controls\"\r\n    >\r\n      <i \r\n      id=\"start_stop\"\r\n      className=\"bi bi-play-fill\"\r\n      onClick={\r\n        () => {\r\n          Display.start_stop();\r\n          if(Display.start === false) {\r\n            Display.run();\r\n          } else {\r\n            Display.stop();\r\n          }\r\n        }\r\n      }\r\n      />\r\n      <i \r\n      id=\"reset\" \r\n      onClick={Display.reset} \r\n      className=\"bi bi-arrow-counterclockwise\"\r\n      />\r\n    </div>\r\n  </div>\r\n)}\r\n\r\nconst timeConverter = time => {\r\n  let minutes = parseInt(time / 60, 10);\r\n  let seconds = parseInt(time % 60, 10);\r\n  \r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return minutes + \":\" + seconds;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  start_stop: () => dispatch({ type: \"START_STOP\" })\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n  timeLeft: timeConverter(state.timeLeft),\r\n  timerLbl: state.timerLbl,\r\n  start: state.start\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Session = (Session) => (\r\n  <div id=\"session\">\r\n    <label id=\"session-label\">Session Length</label>\r\n    <div className=\"controls\">\r\n      <i id=\"session-decrement\" onClick={Session.decrement} className=\"bi bi-arrow-down-short\"/>  \r\n      <label id=\"session-length\">{Session.length}</label>\r\n      <i id=\"session-increment\" onClick={Session.increment} className=\"bi bi-arrow-up-short\"/>\r\n    </div>\r\n  </div>\r\n)\r\nconst mapDispatchToProps = dispatch => ({\r\n  increment: () => dispatch({ type: \"SESSION_INCREMENT\" }),\r\n  decrement: () => dispatch({ type: \"SESSION_DECREMENT\" })\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  length: state.session\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Session);","const interval = (fn) => {\r\n    let baseline = new Date().getTime();\r\n    let timeout = null;\r\n\r\n    let run = () => {\r\n        baseline += 1000;\r\n        timeout = setTimeout(function() {\r\n        run();\r\n        fn();\r\n        }, baseline - new Date().getTime());\r\n    }\r\n\r\n    run();\r\n\r\n    let stop = () => {\r\n        clearTimeout(timeout)\r\n    }\r\n    return {\r\n        stop: stop\r\n    }\r\n}\r\n\r\nexport default interval;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport reducerClock from './reducer';\nimport { createStore } from \"redux\";\nimport \"./styles.css\";\nimport Break from './components/Break';\nimport Display from './components/Display';\nimport Session from './components/Session';\nimport interval from './interval';\n\nclass Clock extends React.Component {\n  countdown() {\n    const timeHandler = () => {\n      const state = store.getState();\n      if(state.timeLeft > 0) {\n        store.dispatch({ type: \"COUNTDOWN\" });\n      } else {\n        if(state.timerLbl === \"Session\") {\n          store.dispatch({ \n            type: \"CHANGE_TIME\",\n            time: state.break * 60,\n            label: \"Break\"\n          });\n\n          this.alarm.play();\n        } else {\n          store.dispatch({ \n            type: \"CHANGE_TIME\",\n            time: state.session * 60,\n            label: \"Session\"\n          });\n\n          this.alarm.play();\n        }\n        this.alarm.play()\n      }\n    }\n\n    this.counter = interval(timeHandler);\n  }\n\n  stopCountdown() {\n    this.counter.stop()\n  }\n\n  reset() {\n    this.stopCountdown();\n    store.dispatch({ type: \"RESET\" });\n  }\n  render() {\n    return (\n      <div id=\"clock\">\n        <div id=\"main-title\">25 + 5 Clock</div>\n        <Break/>\n        <Session/>\n        <Display \n        run={this.countdown.bind(this)} \n        stop={this.stopCountdown.bind(this)}\n        reset={this.reset.bind(this)}\n        />\n        <audio \n        id=\"beep\" \n        preload=\"auto\"\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        ref={(audio) => {\n          this.alarm = audio;\n        }}\n        />\n      </div>\n    )\n  }\n}\n\nconst store = createStore(reducerClock);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Clock />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}